package a6;

public class ArrayLibrary {
	
	public static void main(String[] args) {
		int[] arr = new int[5];
		int[] arryNum = { 2, 3, 4, 5, 4, 4, 3 };
		int[] integers = { 2, -9, 87, 6, 0, 12, -3 };
		int[] lost = { 4, 8, 15, 16, 23, 42 };
		String[] words = { "the", "quick", "brown", "fox" };
		char[] letters = { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h' };
		int[] primes = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47 };
		int[] duplicates = { 4, 2, 3, 5, 4, 4, 3, 2, 9, 1, 3, 4, 5, 2, 1, 5 };
		
//		System.out.println(clear(integers));	 
//		System.out.println(reverseFill(arr, 2));
//		System.out.println(arrayToString(lost));
//		System.out.println(containsDuplicate(words));
//		System.out.println(average(lost));
//		System.out.println(frequencyCount(duplicates));
//		System.out.println(makeFilledArray(5));
	}
	
	// output is in the debugger 
	
	public static int[] clear(int[] clearArr) {
	    for(int i = 0; i < clearArr.length; i++ ){
	    		clearArr[i] = 0; 
	    }
		return clearArr;
	}
	
	public static int[] reverseFill(int[] reverseput, int N) {
	    for (int i = 0; i < reverseput.length; i++) {
	    		reverseput[( reverseput.length - 1) - i] = N++;
	    }
		return reverseput;
	}
	
	public static String arrayToString(int[] arrToStringArr) {
		StringBuilder builder = new StringBuilder();
		for(int i = 0; i < arrToStringArr.length; i++ ) {
		    builder.append( arrToStringArr[i] + "," );
		}
		
		String newString = builder.toString();
		String newerString = newString.substring(0, newString.length()-1);
		String FinalString = "{" + newerString + "}";
		return FinalString;
	}
	
	public static boolean containsDuplicate(String[] DuplicateArrCheck) {
		for (int i = 0; i < DuplicateArrCheck.length; i++) {
		    for ( int h = i + 1; h < DuplicateArrCheck.length; h++) {
		        if (DuplicateArrCheck[h] == DuplicateArrCheck[i]){ 
		            return true;
		        }
		    }
		}
		return false;
	}
	
	public static double average(int[] AverageArr) {
	    int sum = 0;
	    
	    double average;
	    
	    for(int i = 0; i < AverageArr.length; i++){
	    		sum = sum + AverageArr[i];
	    }
		average = (double)sum/AverageArr.length;
		
		return average;
	}
	
	public static int[] frequencyCount(int[] dupArr) {
		int[] counter = new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		int[] newArray = new int[dupArr.length];
		for (int i = 0; i < dupArr.length; i++) {
		    counter[dupArr[i] - 1]++;
		}

		for (int i = 0; i < counter.length; i++) {
		    newArray[i] = counter[i];
		}

		return newArray;
	}
	
	public static int[] makeFilledArray(int arrSize) {
		int[] intArray = new int[arrSize];
		for (int i = 0; i < intArray.length; i++){
	    	   intArray[i] = i;
	    }
		return intArray;
	}
	
	public static int[] sequentialSearchCount(int arrSize) {
		int[] intArray = new int[arrSize];
	return intArray;
	}
	
	public static int[] binarySearchCount(int arrSize) {
		int[] intArray = new int[arrSize];
		for (int i = 0; i < intArray.length; i++){
	    	   intArray[i] = i;
	    }
		return intArray;
	}
	
}
