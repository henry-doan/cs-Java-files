package ac;

import java.util.Comparator;

public class BinarySearchDeluxe {
	
	/*
	 * Return the index of the first key in a[] that equals the search key, or -1 if no such key.
	 * 
	 * @param --
	 * @return --
	 */
	public static <Key> int firstIndexOf(Key[] a, Key key, Comparator<Key> comparator) {
		if ( a == null || key == null || comparator == null ) {
			throw new java.lang.NullPointerException();
		}
		
		for( int i = 0; i < a.length; i++) {
			if (a[i] == key) {
				return i;
			}
		}
		// maybe binary search
		
		return -1;
		
	}
	
	/*
	 * Return the index of the last key in a[] that equals the search key, or -1 if no such key.
	 * 
	 * @param --
	 * @return --
	 */
	public static <Key> int lastIndexOf(Key[] a, Key key, Comparator<Key> comparator) {
		if ( a == null || key == null || comparator == null ) {
			throw new java.lang.NullPointerException();
		}
		
		int result = -1;
		for( int i = 0; i < a.length; i++) {
			if (a[i] == key) {
				result = i;
			}
		}
		// maybe binary search
		
		return result;
		
	}
}
