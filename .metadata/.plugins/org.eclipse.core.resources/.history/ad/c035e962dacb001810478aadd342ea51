package ac;

import java.util.Comparator;

public class Term implements Comparable<Term> {
	private String termQuery;
	private double termWeight;
	
	/*
	 * Initialize a term with the given query 
	 * string and weight.
	 * 
	 * @param query --
	 *        weight --
	 * 
	 */
	public Term(String query, double weight) {
		this.termQuery = query;
		termWeight = weight;
	}
	
	/*
	 * Compare the terms in descending order by weight.
	 * 
	 * @return 
	 */
	public static Comparator<Term> byReverseWeightOrder(){
		return null;
		
	}
	
	/*
	 * Compare the terms in lexicographic order but using 
	 * only the first r characters of each query.
	 * 
	 * @param r --
	 * @return 
	 */
	public static Comparator<Term> byPrefixOrder(int r) {
		return null;
		
	}
	
	/*
	 *  Compare the terms in lexicographic order by query.
	 * 
	 * @param that --
	 * @return 
	 */
	@Override
	public int compareTo(Term that) {
		// TODO Auto-generated method stub
		return 0;
	}

	/*
	 * Return a string representation of the term in the following 
	 * format: the weight, followed by a tab, followed by the 
	 * query.
	 * 
	 * @param r --
	 * @return 
	 */
	public String toString() {
		return null;
		
	}
}
